#############################################################################
# Makefile for building: GLaRDDOS
# Generated by qmake (2.01a) (Qt 4.7.3) on: Sat Sep 10 15:34:45 2011
# Project:  GLaRDDOS.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtNetwork -I/usr/include/QtGui -I/usr/include -Idebug -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtGui -L/usr/lib -L/usr/X11R6/lib -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = debug/

####### Files

SOURCES       = main.cpp \
		socketplant.cpp \
		gglarddos.cpp \
		backbone.cpp \
		hordefactory.cpp \
		hordeviairc.cpp \
		hordeviahttp.cpp \
		hordedummy.cpp \
		hordeviafile.cpp debug/moc_gglarddos.cpp \
		debug/moc_hordeviahttp.cpp \
		debug/moc_hordeviafile.cpp
OBJECTS       = debug/main.o \
		debug/socketplant.o \
		debug/gglarddos.o \
		debug/backbone.o \
		debug/hordefactory.o \
		debug/hordeviairc.o \
		debug/hordeviahttp.o \
		debug/hordedummy.o \
		debug/hordeviafile.o \
		debug/moc_gglarddos.o \
		debug/moc_hordeviahttp.o \
		debug/moc_hordeviafile.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/debug_and_release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/build_pass.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		GLaRDDOS.pro
QMAKE_TARGET  = GLaRDDOS
DESTDIR       = 
TARGET        = GLaRDDOS

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile.Debug $(TARGET)

$(TARGET): ui_gglarddos.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug_and_release -o Makefile.Debug GLaRDDOS.pro

dist: 
	@$(CHK_DIR_EXISTS) debug/GLaRDDOS1.0.0 || $(MKDIR) debug/GLaRDDOS1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) debug/GLaRDDOS1.0.0/ && $(COPY_FILE) --parents socketplant.h backbone.h gglarddos.h hordefactory.h hordeviairc.h hordeviahttp.h hordedummy.h hordeviafile.h debug/GLaRDDOS1.0.0/ && $(COPY_FILE) --parents main.cpp socketplant.cpp gglarddos.cpp backbone.cpp hordefactory.cpp hordeviairc.cpp hordeviahttp.cpp hordedummy.cpp hordeviafile.cpp debug/GLaRDDOS1.0.0/ && $(COPY_FILE) --parents gglarddos.ui debug/GLaRDDOS1.0.0/ && (cd `dirname debug/GLaRDDOS1.0.0` && $(TAR) GLaRDDOS1.0.0.tar GLaRDDOS1.0.0 && $(COMPRESS) GLaRDDOS1.0.0.tar) && $(MOVE) `dirname debug/GLaRDDOS1.0.0`/GLaRDDOS1.0.0.tar.gz . && $(DEL_FILE) -r debug/GLaRDDOS1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile.Debug


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: debug/moc_gglarddos.cpp debug/moc_hordeviahttp.cpp debug/moc_hordeviafile.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) debug/moc_gglarddos.cpp debug/moc_hordeviahttp.cpp debug/moc_hordeviafile.cpp
debug/moc_gglarddos.cpp: backbone.h \
		socketplant.h \
		hordefactory.h \
		gglarddos.h
	/usr/bin/moc $(DEFINES) $(INCPATH) gglarddos.h -o debug/moc_gglarddos.cpp

debug/moc_hordeviahttp.cpp: hordefactory.h \
		backbone.h \
		socketplant.h \
		hordeviahttp.h
	/usr/bin/moc $(DEFINES) $(INCPATH) hordeviahttp.h -o debug/moc_hordeviahttp.cpp

debug/moc_hordeviafile.cpp: hordefactory.h \
		backbone.h \
		socketplant.h \
		hordeviafile.h
	/usr/bin/moc $(DEFINES) $(INCPATH) hordeviafile.h -o debug/moc_hordeviafile.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_gglarddos.h
compiler_uic_clean:
	-$(DEL_FILE) ui_gglarddos.h
ui_gglarddos.h: gglarddos.ui
	/usr/bin/uic gglarddos.ui -o ui_gglarddos.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

debug/main.o: main.cpp gglarddos.h \
		backbone.h \
		socketplant.h \
		hordefactory.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/main.o main.cpp

debug/socketplant.o: socketplant.cpp socketplant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/socketplant.o socketplant.cpp

debug/gglarddos.o: gglarddos.cpp gglarddos.h \
		backbone.h \
		socketplant.h \
		hordefactory.h \
		ui_gglarddos.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/gglarddos.o gglarddos.cpp

debug/backbone.o: backbone.cpp backbone.h \
		socketplant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/backbone.o backbone.cpp

debug/hordefactory.o: hordefactory.cpp hordefactory.h \
		backbone.h \
		socketplant.h \
		hordeviahttp.h \
		hordeviairc.h \
		hordeviafile.h \
		hordedummy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/hordefactory.o hordefactory.cpp

debug/hordeviairc.o: hordeviairc.cpp hordeviairc.h \
		hordefactory.h \
		backbone.h \
		socketplant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/hordeviairc.o hordeviairc.cpp

debug/hordeviahttp.o: hordeviahttp.cpp hordeviahttp.h \
		hordefactory.h \
		backbone.h \
		socketplant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/hordeviahttp.o hordeviahttp.cpp

debug/hordedummy.o: hordedummy.cpp hordedummy.h \
		hordefactory.h \
		backbone.h \
		socketplant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/hordedummy.o hordedummy.cpp

debug/hordeviafile.o: hordeviafile.cpp hordeviafile.h \
		hordefactory.h \
		backbone.h \
		socketplant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/hordeviafile.o hordeviafile.cpp

debug/moc_gglarddos.o: debug/moc_gglarddos.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_gglarddos.o debug/moc_gglarddos.cpp

debug/moc_hordeviahttp.o: debug/moc_hordeviahttp.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_hordeviahttp.o debug/moc_hordeviahttp.cpp

debug/moc_hordeviafile.o: debug/moc_hordeviafile.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_hordeviafile.o debug/moc_hordeviafile.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

